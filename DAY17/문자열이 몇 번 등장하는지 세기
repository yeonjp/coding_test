Description
문자열 myString과 pat이 주어집니다. myString에서 pat이 등장하는 횟수를 return 하는 solution 함수를 완성해 주세요.

제한사항
1 ≤ myString ≤ 1000
1 ≤ pat ≤ 10
입출력 예
myString	pat	result
"banana"	"ana"	2
"aaaa"	"aa"	3
입출력 예 설명
입출력 예 #1

"banana"에서 1 ~ 3번 인덱스에서 한 번, 3 ~ 5번 인덱스에서 또 한 번 "ana"가 등장해서 총 두 번 등장합니다. 따라서 2를 return 합니다.
입출력 예 #2

"aaaa"에서 0 ~ 2번 인덱스에서 한 번, 1 ~ 3번 인덱스에서 한 번, 2 ~ 4번 인덱스에서 한 번 "aa"가 등장해서 총 세 번 등장합니다. 따라서 3을 return 합니다.

solution
class Solution {
    public int solution(String myString, String pat) {
        int answer = 0;
        int n = pat.length();
        
        for(int i = 0; i < myString.length() -n + 1; i++){
            if(myString.substring(i, n + i).equals(pat)){
                answer++;
            }
            
        }
        return answer;
    }
}

class Solution {
    public int solution(String myString, String pat) {
        int answer = 0; // 패턴이 등장하는 횟수를 저장할 변수

        int n = pat.length(); // 패턴의 길이를 저장

        // myString의 길이에서 pat의 길이를 뺀 만큼만 루프를 돌 수 있도록 설정
        for (int i = 0; i < myString.length() - n + 1; i++) {
            // myString에서 현재 위치부터 pat의 길이만큼의 부분 문자열을 추출
            if (myString.substring(i, n + i).equals(pat)) {
                // 부분 문자열이 pat과 같다면 카운트 증가
                answer++;
            }
        }

        return answer; // 패턴이 등장한 총 횟수를 반환
    }
}
