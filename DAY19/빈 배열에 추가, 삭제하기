Description
아무 원소도 들어있지 않은 빈 배열 X가 있습니다. 길이가 같은 정수 배열 arr과 boolean 배열 flag가 매개변수로 주어질 때, flag를 차례대로 순회하며 flag[i]가 true라면 X의 뒤에 arr[i]를 arr[i] × 2 번 추가하고, flag[i]가 false라면 X에서 마지막 arr[i]개의 원소를 제거한 뒤 X를 return 하는 solution 함수를 작성해 주세요.

제한사항
1 ≤ arr의 길이 = flag의 길이 ≤ 100
arr의 모든 원소는 1 이상 9 이하의 정수입니다.
현재 X의 길이보다 더 많은 원소를 빼는 입력은 주어지지 않습니다.
입출력 예
arr	flag	result
[3, 2, 4, 1, 3]	[true, false, true, false, false]	[3, 3, 3, 3, 4, 4, 4, 4]
입출력 예 설명
입출력 예 #1

예제 1번에서 X의 변화를 표로 나타내면 다음과 같습니다
|i|flag[i]|arr[i]|X|

|---|----|-|-|

||||[]|

|0|true|3|[3, 3, 3, 3, 3, 3]|

|1|false|2|[3, 3, 3, 3]|

|2|true|4|[3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4]|

|3|false|1|[3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4]|

|4|false|3|[3, 3, 3, 3, 4, 4, 4, 4]|

따라서 [3, 3, 3, 3, 4, 4, 4, 4]를 return 합니다.

solution
import java.util.*;

class Solution {
    public int[] solution(int[] arr, boolean[] flag) {
        // 정수 리스트 X를 초기화합니다.
        List<Integer> X = new ArrayList<>();
        
        // arr과 flag 배열의 길이만큼 반복합니다.
        for (int i = 0; i < arr.length; i++) {
            // flag[i]가 true인 경우
            if (flag[i]) {
                // arr[i] 값을 num에 저장합니다.
                int num = arr[i];
                // num * 2 만큼 반복하여 num 값을 X에 추가합니다.
                for (int j = 0; j < num * 2; j++) {
                    X.add(num);
                }
            } else {
                // flag[i]가 false인 경우
                // arr[i] 값을 num에 저장합니다.
                int num = arr[i];
                // 현재 X의 크기를 저장합니다.
                int size = X.size();
                // X의 크기가 num 이상인 경우만 처리합니다.
                if (size >= num) {
                    // X의 마지막 num 개의 원소를 제거합니다.
                    for (int j = 0; j < num; j++) {
                        X.remove(size - 1 - j);
                    }
                }
            }
        }
        
        // X를 배열로 변환합니다.
        int[] answer = new int[X.size()];
        // 리스트 X의 각 요소를 배열 answer에 복사합니다.
        for (int i = 0; i < X.size(); i++) {
            answer[i] = X.get(i);
        }
        // 최종적으로 변환된 배열을 반환합니다.
        return answer;
    }
}
