Description
양의 정수 n이 매개변수로 주어집니다. n × n 배열에 1부터 n2 까지 정수를 인덱스 [0][0]부터 시계방향 나선형으로 배치한 이차원 배열을 return 하는 solution 함수를 작성해 주세요.

제한사항
1 ≤ n ≤ 30
입출력 예
n	result
4	[[1, 2, 3, 4], [12, 13, 14, 5], [11, 16, 15, 6], [10, 9, 8, 7]]
5	[[1, 2, 3, 4, 5], [16, 17, 18, 19, 6], [15, 24, 25, 20, 7], [14, 23, 22, 21, 8], [13, 12, 11, 10, 9]]
입출력 예 설명
입출력 예 #1

예제 1번의 n의 값은 4로 4 × 4 배열에 다음과 같이 1부터 16까지 숫자를 채울 수 있습니다.

행 \ 열	0	1	2	3
0	1	2	3	4
1	12	13	14	5
2	11	16	15	6
3	10	9	8	7
따라서 [[1, 2, 3, 4], [12, 13, 14, 5], [11, 16, 15, 6], [10, 9, 8, 7]]를 return 합니다.

입출력 예 #2

예제 2번의 n의 값은 5로 5 × 5 배열에 다음과 같이 1부터 25까지 숫자를 채울 수 있습니다.

행 \ 열	0	1	2	3	4
0	1	2	3	4	5
1	16	17	18	19	6
2	15	24	25	20	7
3	14	23	22	21	8
4	13	12	11	10	9
따라서 [[1, 2, 3, 4, 5], [16, 17, 18, 19, 6], [15, 24, 25, 20, 7], [14, 23, 22, 21, 8], [13, 12, 11, 10, 9]]를 return 합니다.

SOLUTION

class Solution {
    public int[][] solution(int n) {
        int[][] answer = new int[n][n];
        int val = 1;
        int row = 0;
        int col = 0;
        int lastRow = n-1;
        int lastCol = n-1;
        
        while(val <= n * n){
            for(int i = col; i <= lastCol; i++){
                answer[row][i] = val++;
            }
            
            for(int i = row + 1; i <= lastRow; i++){
                answer[i][lastCol] = val++;
            }
            
            for(int i = lastCol -1 ; i >= col; i--){
                answer[lastRow][i] = val++;
            }
            
            for(int i = lastRow - 1; i > row; i--){
                answer[i][col] = val++;
            }
            
            row++;
            col++;
            lastRow--;
            lastCol--;
        }
        return answer;
    }
}

아니 이거 0단계 문제 아닌 것 같은데 뭐지???
좀 더 공부해야겠다
아니 이거 3점인게 말이 안되는데....

