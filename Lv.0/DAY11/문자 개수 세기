Description
알파벳 대소문자로만 이루어진 문자열 my_string이 주어질 때, 
my_string에서 'A'의 개수, my_string에서 'B'의 개수,..., my_string에서 'Z'의 개수, my_string에서 'a'의 개수, my_string에서 'b'의 개수,..., my_string에서 'z'의 개수를 순서대로 담은 길이 52의 정수 배열을 return 하는 solution 함수를 작성해 주세요.

제한사항
1 ≤ my_string의 길이 ≤ 1,000
입출력 예
my_string	result
"Programmers"	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0]
입출력 예 설명
입출력 예 #1

예제 1번의 my_string에서 'P'가 1개, 'a'가 1개, 'e'가 1개, 'g'가 1개, 'm'이 2개, 'o'가 1개, 'r'가 3개, 's'가 1개 있으므로 
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0]를 return 합니다.

solution
52개의 배열을 만들고 (A->Z, a->z) 각각 0 ~ 52번 c의 값이 'a'일 경우 대문자 A-Z가 다끝난 뒤 26번째에 들어가야 되므로 
'a' - 'a'는 0이고 거기에 + 26을 해서 26번째 값 +1 'b'인 경우 98 - 97해서 1나오고 거기에 + 26해서 27번째 배열에 +1
class Solution {
    public int[] solution(String my_string) {
        // 대문자, 소문자 총 52글자를 배열로 만들어줌
        int[] answer = new int[52];
        
        for(char charList : my_string.toCharArray()){
            if(Character.isUpperCase(charList)){
                answer[charList-'A']++;
            }else{
                answer[charList-'a'+26]++;
            }
        }
        return answer;
    }
}
